service: () -> {
    addMarineSpecie: (text, record {name:text; description:text}) -> (variant {Ok:record {id:text; updated_at:text; name:text; description:text; created_at:text; taxonomy:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addTaxonomy: (record {taxon_class:text; order:text; genus:text; species:text; family:text; kingdom:text; phylum:text}) -> (variant {Ok:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    addTaxonomyToMarineSpecie: (text, text) -> (variant {Ok:record {id:text; updated_at:text; name:text; description:text; created_at:text; taxonomy:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    deleteMarineSpecie: (text) -> (variant {Ok:record {id:text; updated_at:text; name:text; description:text; created_at:text; taxonomy:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    deleteTaxonomy: (text) -> (variant {Ok:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    getMarineSpecie: (text) -> (variant {Ok:record {id:text; updated_at:text; name:text; description:text; created_at:text; taxonomy:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    getMarineSpecies: () -> (vec record {id:text; updated_at:text; name:text; description:text; created_at:text; taxonomy:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}}) query;
    getTaxonomies: () -> (vec record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}) query;
    getTaxonomy: (text) -> (variant {Ok:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}}) query;
    removeTaxonomyFromMarineSpecie: (text, text) -> (variant {Ok:record {id:text; updated_at:text; name:text; description:text; created_at:text; taxonomy:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    searchMarineSpeciesByTaxonomyKingdomOrPhylum: (text) -> (vec record {id:text; updated_at:text; name:text; description:text; created_at:text; taxonomy:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}}) query;
    sortMarineSpeciesByTaxonomyKingdom: () -> (vec record {id:text; updated_at:text; name:text; description:text; created_at:text; taxonomy:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}}) query;
    sortMarineSpeciesByTaxonomyKingdomDesc: () -> (vec record {id:text; updated_at:text; name:text; description:text; created_at:text; taxonomy:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}}) query;
    sortMarineSpeciesByTimeOfCreation: () -> (vec record {id:text; updated_at:text; name:text; description:text; created_at:text; taxonomy:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}}) query;
    updateMarineSpecie: (text, record {name:text; description:text}) -> (variant {Ok:record {id:text; updated_at:text; name:text; description:text; created_at:text; taxonomy:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
    updateTaxonomy: (text, record {taxon_class:text; order:text; genus:text; species:text; family:text; kingdom:text; phylum:text}) -> (variant {Ok:record {id:text; updated_at:text; taxon_class:text; order:text; created_at:text; genus:text; species:text; family:text; kingdom:text; phylum:text}; Err:variant {PaymentFailed:text; InvalidPayload:text; NotFound:text; PaymentCompleted:text}});
}
